To solve the unexpected CSS specificity issue, you can adjust the selectors or use the `!important` flag judiciously:

**Method 1 (Preferred): Adjust selectors for better specificity:**

```css
#myElement {
  color: blue;
}

.myClass {
  color: red;
}

#myElement.myClass {
  color: green !important; /* Use !important only if absolutely necessary */
}
```

In this approach we ensure that the most relevant styles are applied, and only use `!important` as a last resort.

**Method 2 (Less preferred): Use `!important` (Use sparingly):**

```css
#myElement {
  color: blue !important;
}

.myClass {
  color: red;
}

#myElement.myClass {
  color: green;
}
```

While using `!important` can override other styles, it's generally considered bad practice because it reduces CSS maintainability.  Only use it as a last resort when you can't solve the specificity problem with careful selector management.